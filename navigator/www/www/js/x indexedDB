function openDatabase() {
    return new Promise((resolve, reject) => {
        const request = indexedDB.open("BibbulmunTrackDB", 1);

        request.onupgradeneeded = function(event) {
            const db = event.target.result;
            db.createObjectStore("reports", { keyPath: "id", autoIncrement: true });
        };

        request.onsuccess = function(event) {
            resolve(event.target.result);
        };

        request.onerror = function(event) {
            reject("Error opening IndexedDB: " + event.target.errorCode);
        };
    });
}

function saveReportLocally(report) {
    openDatabase().then(db => {
        const transaction = db.transaction(["reports"], "readwrite");
        const objectStore = transaction.objectStore("reports");
        objectStore.add(report);
        transaction.oncomplete = () => {
            console.log("Report saved locally.");
        };
        transaction.onerror = event => {
            console.error("Error saving report: ", event.target.errorCode);
        };
    }).catch(error => {
        console.error(error);
    });
}


function syncData() {
    openDatabase().then(db => {
        const transaction = db.transaction(["reports"], "readonly");
        const objectStore = transaction.objectStore("reports");

        objectStore.openCursor().onsuccess = function(event) {
            const cursor = event.target.result;
            if (cursor) {
                const report = cursor.value;

                fetch('http://localhost:3000/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(report)
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Report synced:', data);
                    const deleteTransaction = db.transaction(["reports"], "readwrite");
                    const deleteObjectStore = deleteTransaction.objectStore("reports");
                    deleteObjectStore.delete(report.id);
                })
                .catch(error => console.error('Error syncing report:', error));

                cursor.continue();
            } else {
                console.log("All data synced.");
            }
        };
    }).catch(error => {
        console.error(error);
    });
}
